package com.milesgwood.moe.hbm;
// Generated Feb 20, 2017 1:21:36 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 * Shows generated by hbm2java
 */
public class Shows  implements java.io.Serializable {

     private Integer id;
     private String venue;
     private String showUrl;
     private String showName;
     private String date;
     private Integer score;
     private Set<Songs> setList 
             = new HashSet<Songs>(0);;

    public Shows() {
    }
	
    /**
     * I would like to get rid of these large constructors and just use the setters. 
     */
    public Shows(String showUrl) {
        this.showUrl = showUrl;
    }
    
    /**
     * I would like to get rid of these large constructors and just use the setters. 
     */
    public Shows(String venue, String showUrl, String showName, String date, Integer score) {
       this.venue = venue;
       this.showUrl = showUrl;
       this.showName = showName;
       this.date = date;
       this.score = score;
    }
    
    public Set<Songs> getSetList() {
        return setList;
    }

    public void setSetList(Set<Songs> setList) {
        this.setList = setList;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public String getVenue() {
        return this.venue;
    }
    
    public void setVenue(String venue) {
        this.venue = venue;
    }
    public String getShowUrl() {
        return this.showUrl;
    }
    
    public void setShowUrl(String showUrl) {
        this.showUrl = showUrl;
    }
    public String getShowName() {
        return this.showName;
    }
    
    public void setShowName(String showName) {
        this.showName = showName;
    }
    public String getDate() {
        return this.date;
    }
    
    public void setDate(String date) {
        this.date = date;
    }
    public Integer getScore() {
        return this.score;
    }
    
    public void setScore(Integer score) {
        this.score = score;
    }
    
    /**
     * This method converts the Shows object into JSON format to get sent in a HTTP response.
     * @return 
     */
    public String toJSON() {
        String jsonInString = "Something went horribly wrong when I tried to get that Show and turn it into JSON. I'm drunk. Leave me alone and go listen to something else other than show ID: " + this.id;
        String errorMessage = jsonInString;
        ObjectMapper mapper = new ObjectMapper();
         try {
             jsonInString = mapper.writeValueAsString(this);
         } catch (JsonProcessingException ex) {
             Logger.getLogger(Shows.class.getName()).log(Level.SEVERE, errorMessage, ex);
         }
        return jsonInString;
    }
}


